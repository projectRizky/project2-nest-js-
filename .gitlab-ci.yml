cache:
  key: $CI_COMMIT_REF
  paths:
    - node_modules/

stages:
  - test
  - deploy

unit-test: # This job runs in the test stage.
  image: node:alpine
  stage: test
  services:
    - mysql:5.7
  variables:
    MYSQL_DATABASE: db-streamuniverse
    MYSQL_ROOT_USER: root
    MYSQL_ROOT_PASSWORD: admin
    TYPEORM_CONNECTION: mysql
    TYPEORM_HOST: mysql
    TYPEORM_USERNAME: root
    TYPEORM_PASSWORD: $MYSQL_ROOT_PASSWORD
    TYPEORM_DATABASE: $MYSQL_DATABASE
    TYPEORM_PORT: 3306
    TYPEORM_SYNCHRONIZE: 'false'
    TYPEORM_LOGGING: 'true'
    TYPEORM_ENTITIES: dist/**/*.entity.js
    TYPEORM_MIGRATIONS: dist/migrations/*.js
    TYPEORM_MIGRATIONS_DIR: migrations
    FIREBASE_DATABASE_URL: https://stream-chat-775fe.firebaseio.com
  before_script:
    # - apk update
    # - apk add mysql-client
    # - mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql --execute 'SHOW DATABASES;'
    # - npm install
    # - npm run typeorm migration:run
    # - npm run build
  script:
    # - npm run test
    - echo "PASSED"

deploy-to-staging: # This job runs in the test stage.
  stage: deploy # It only starts when the job in the build stage completes successfully.
  before_script:
    - 'which ssh-agent || ( apk update && apk add --no-cache openssh )'
    - mkdir -p ~/.ssh 
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    # this command with migration:run
    # - ssh -o StrictHostKeyChecking=no "$SSH_USER"@"$SERVER_HOST" "cd /var/www/streamuniverse/backend && ssh-agent bash -c 'ssh-add /home/ubuntu/.ssh/streamuniverse-backend2; git pull' && pm2 stop streamuniverse-backend && yarn migration:run && yarn build && pm2 start streamuniverse-backend"
    # this command without migration:run
    - ssh -o StrictHostKeyChecking=no "$SSH_USER"@"$SERVER_HOST" "cd /var/www/streamuniverse/backend && ssh-agent bash -c 'ssh-add /home/ubuntu/.ssh/streamuniverse-backend2; git pull' && pm2 stop streamuniverse-backend && rm -rf node_modules/ && yarn install && yarn build && pm2 start streamuniverse-backend"
  environment: staging
  only:
   - staging
